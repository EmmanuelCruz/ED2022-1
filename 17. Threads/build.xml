<?xml version="1.0" encoding="UTF-8"?>
<!-- Ejemplo de threads.
Contiene los siguientes comandos:
* clean - Borra tanto las clases, como el JAR como el JavaDoc generado.
* build - Compila el código fuente *.java en binarios de Java *.class 
* jar - Compila el código fuente *.java y empaqueta los resultados en un archivo
	ejecutable *.jar
* doc - Crea el Javadoc del proyecto.
* Author: Emmanuel Cruz Hernández.
* Version: Enero 2022. -->

<project>
  
  <target name="clean" >
    <delete dir="build" />
    <delete dir="doc" />
  </target>

  <!-- Genera todos los archivos .class -->
  <target name="build" >
    <mkdir dir="build/classes" />
    <javac srcdir="src" destdir="build/classes" debug="true" debuglevel="lines,vars,source" >
    </javac>
  </target>

  <!-- Generar el archivo ejecutable del proyecto -->
  <target name="jar" >
    <antcall target="build" />
    <mkdir dir="build/jar" />
    <jar destfile="build/jar/Task.jar" basedir="build/classes" >
      <manifest >
	<attribute name="DependencyFinder" value="main" />
	<attribute name="Main-Class" value="fciencias.edatos.threads.Task" />
      </manifest >
    </jar >
  </target>

  <!-- Ejecuta el proyecto -->
  <target name="run" >
    <java jar="build/jar/Task.jar" fork="true" >
    </java>
  </target >

  <!-- Genera la documentacion -->
  <target name="doc" >
    <mkdir dir="doc" />
    <javadoc sourcepath="src" destdir="doc" access="private" windowtitle="Task" doctitle="Task" author="true" version="true" >
      <classpath >
      </classpath >
    </javadoc>
  </target >
  
</project>
